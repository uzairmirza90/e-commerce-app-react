{"ast":null,"code":"const initialState = [];\nexport const cart = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_PRODUCT':\n      const productExist = state.find(product => product.id === action.payload.id);\n      let totalPrice = 0;\n\n      if (productExist) {\n        totalPrice += productExist.price;\n        return state.map(x => x.id === action.payload.id ? { ...x,\n          qty: x.qty + 1\n        } : x);\n      } else {\n        const product = action.payload;\n        totalPrice -= product.price;\n        return [...state, { ...product,\n          qty: 1\n        }];\n      }\n\n    case 'DELETE_PRODUCT':\n      const exist1 = state.find(x => x.id === action.payload.id);\n\n      if (exist1.qty === 1) {\n        return state.filter(x => x.id !== exist1.id);\n      } else {\n        return state.map(x => x.id === action.payload.id ? { ...x,\n          qty: x.qty - 1\n        } : x);\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/uzairjamil/Desktop/Development/Projects/React/e-commerce-app/front-end/src/redux/reducers.js"],"names":["initialState","cart","state","action","type","productExist","find","product","id","payload","totalPrice","price","map","x","qty","exist1","filter"],"mappings":"AAAA,MAAMA,YAAY,GAAG,EAArB;AAEA,OAAO,MAAMC,IAAI,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AAClD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,aAAL;AACI,YAAMC,YAAY,GAAGH,KAAK,CAACI,IAAN,CAAYC,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeL,MAAM,CAACM,OAAP,CAAeD,EAAtD,CAArB;AACA,UAAIE,UAAU,GAAG,CAAjB;;AACA,UAAGL,YAAH,EAAgB;AACZK,QAAAA,UAAU,IAAIL,YAAY,CAACM,KAA3B;AACA,eAAOT,KAAK,CAACU,GAAN,CAAWC,CAAD,IAAMA,CAAC,CAACL,EAAF,KAASL,MAAM,CAACM,OAAP,CAAeD,EAAxB,GAA6B,EAAC,GAAGK,CAAJ;AAAOC,UAAAA,GAAG,EAAED,CAAC,CAACC,GAAF,GAAQ;AAApB,SAA7B,GAAsDD,CAAtE,CAAP;AAEH,OAJD,MAIK;AACD,cAAMN,OAAO,GAAGJ,MAAM,CAACM,OAAvB;AACAC,QAAAA,UAAU,IAAIH,OAAO,CAACI,KAAtB;AACA,eAAM,CAAC,GAAGT,KAAJ,EAAW,EAAE,GAAGK,OAAL;AAAcO,UAAAA,GAAG,EAAE;AAAnB,SAAX,CAAN;AACH;;AAEL,SAAK,gBAAL;AACI,YAAMC,MAAM,GAAGb,KAAK,CAACI,IAAN,CAAYO,CAAD,IAAMA,CAAC,CAACL,EAAF,KAASL,MAAM,CAACM,OAAP,CAAeD,EAAzC,CAAf;;AACA,UAAGO,MAAM,CAACD,GAAP,KAAe,CAAlB,EAAoB;AAChB,eAAOZ,KAAK,CAACc,MAAN,CAAcH,CAAD,IAAMA,CAAC,CAACL,EAAF,KAASO,MAAM,CAACP,EAAnC,CAAP;AACH,OAFD,MAEK;AACD,eAAON,KAAK,CAACU,GAAN,CAAWC,CAAD,IAAMA,CAAC,CAACL,EAAF,KAASL,MAAM,CAACM,OAAP,CAAeD,EAAxB,GAA6B,EAAC,GAAGK,CAAJ;AAAOC,UAAAA,GAAG,EAAED,CAAC,CAACC,GAAF,GAAM;AAAlB,SAA7B,GAAoDD,CAApE,CAAP;AACH;;AAEL;AACI,aAAOX,KAAP;AAvBR;AAyBH,CA1BM","sourcesContent":["const initialState = []\n\nexport const cart = (state = initialState, action) => {\n    switch(action.type){\n        case 'ADD_PRODUCT':\n            const productExist = state.find((product) => product.id === action.payload.id)\n            let totalPrice = 0\n            if(productExist){\n                totalPrice += productExist.price;\n                return state.map((x)=> x.id === action.payload.id ? {...x, qty: x.qty + 1} : x);\n                \n            }else{\n                const product = action.payload;\n                totalPrice -= product.price;\n                return[...state, { ...product, qty: 1, }]\n            }\n        \n        case 'DELETE_PRODUCT':\n            const exist1 = state.find((x)=> x.id === action.payload.id);\n            if(exist1.qty === 1){\n                return state.filter((x)=> x.id !== exist1.id);\n            }else{\n                return state.map((x)=> x.id === action.payload.id ? {...x, qty: x.qty-1} : x);\n            }\n            \n        default: \n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}