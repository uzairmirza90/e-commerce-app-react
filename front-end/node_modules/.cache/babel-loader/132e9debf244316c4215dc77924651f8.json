{"ast":null,"code":"const initialState = [];\nexport const persistedState = localStorage.getItem('reduxState') ? JSON.parse(localStorage.getItem('reduxState')) : {};\nexport const cart = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_PRODUCT':\n      const productExist = state.find(product => product.id === action.payload.id);\n\n      if (productExist) {\n        let newState = state.map(x => x.id === action.payload.id ? { ...x,\n          qty: x.qty + 1\n        } : x);\n        return newState;\n      } else {\n        const product = action.payload;\n        let newState = [...state, { ...product,\n          qty: 1\n        }];\n        return newState;\n      }\n\n    case 'DELETE_PRODUCT':\n      const exist1 = state.find(x => x.id === action.payload.id);\n\n      if (exist1.qty === 1) {\n        let newState = state.filter(x => x.id !== exist1.id);\n        return newState;\n      } else {\n        let newState = state.map(x => x.id === action.payload.id ? { ...x,\n          qty: x.qty - 1\n        } : x);\n        return newState;\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/uzairjamil/Desktop/Development/Projects/React/e-commerce-app/front-end/src/redux/reducers.js"],"names":["initialState","persistedState","localStorage","getItem","JSON","parse","cart","state","action","type","productExist","find","product","id","payload","newState","map","x","qty","exist1","filter"],"mappings":"AAAA,MAAMA,YAAY,GAAG,EAArB;AAEA,OAAO,MAAMC,cAAc,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,CADwB,GAExB,EAFC;AAIP,OAAO,MAAMG,IAAI,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBP,YAAyB;AAAA,MAAXQ,MAAW;;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,aAAL;AACI,YAAMC,YAAY,GAAGH,KAAK,CAACI,IAAN,CAAYC,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeL,MAAM,CAACM,OAAP,CAAeD,EAAtD,CAArB;;AACA,UAAIH,YAAJ,EAAkB;AACd,YAAIK,QAAQ,GAAGR,KAAK,CAACS,GAAN,CAAWC,CAAD,IAAOA,CAAC,CAACJ,EAAF,KAASL,MAAM,CAACM,OAAP,CAAeD,EAAxB,GAA6B,EAAE,GAAGI,CAAL;AAAQC,UAAAA,GAAG,EAAED,CAAC,CAACC,GAAF,GAAQ;AAArB,SAA7B,GAAwDD,CAAzE,CAAf;AACA,eAAOF,QAAP;AACH,OAHD,MAGO;AACH,cAAMH,OAAO,GAAGJ,MAAM,CAACM,OAAvB;AACA,YAAIC,QAAQ,GAAG,CAAC,GAAGR,KAAJ,EAAW,EAAE,GAAGK,OAAL;AAAcM,UAAAA,GAAG,EAAE;AAAnB,SAAX,CAAf;AACA,eAAOH,QAAP;AACH;;AAGL,SAAK,gBAAL;AACI,YAAMI,MAAM,GAAGZ,KAAK,CAACI,IAAN,CAAYM,CAAD,IAAOA,CAAC,CAACJ,EAAF,KAASL,MAAM,CAACM,OAAP,CAAeD,EAA1C,CAAf;;AACA,UAAIM,MAAM,CAACD,GAAP,KAAe,CAAnB,EAAsB;AAClB,YAAIH,QAAQ,GAAGR,KAAK,CAACa,MAAN,CAAcH,CAAD,IAAOA,CAAC,CAACJ,EAAF,KAASM,MAAM,CAACN,EAApC,CAAf;AACA,eAAOE,QAAP;AACH,OAHD,MAGO;AACH,YAAIA,QAAQ,GAAGR,KAAK,CAACS,GAAN,CAAWC,CAAD,IAAOA,CAAC,CAACJ,EAAF,KAASL,MAAM,CAACM,OAAP,CAAeD,EAAxB,GAA6B,EAAE,GAAGI,CAAL;AAAQC,UAAAA,GAAG,EAAED,CAAC,CAACC,GAAF,GAAQ;AAArB,SAA7B,GAAwDD,CAAzE,CAAf;AACA,eAAOF,QAAP;AACH;;AAEL;AACI,aAAOR,KAAP;AAxBR;AA0BH,CA3BM","sourcesContent":["const initialState = []\n\nexport const persistedState = localStorage.getItem('reduxState')\n    ? JSON.parse(localStorage.getItem('reduxState'))\n    : {}\n\nexport const cart = (state = initialState, action) => {\n    switch (action.type) {\n        case 'ADD_PRODUCT':\n            const productExist = state.find((product) => product.id === action.payload.id)\n            if (productExist) {\n                let newState = state.map((x) => x.id === action.payload.id ? { ...x, qty: x.qty + 1 } : x);\n                return newState\n            } else {\n                const product = action.payload;\n                let newState = [...state, { ...product, qty: 1, }]\n                return newState\n            }\n\n\n        case 'DELETE_PRODUCT':\n            const exist1 = state.find((x) => x.id === action.payload.id);\n            if (exist1.qty === 1) {\n                let newState = state.filter((x) => x.id !== exist1.id);\n                return newState;\n            } else {\n                let newState = state.map((x) => x.id === action.payload.id ? { ...x, qty: x.qty - 1 } : x);\n                return newState;\n            }\n\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}