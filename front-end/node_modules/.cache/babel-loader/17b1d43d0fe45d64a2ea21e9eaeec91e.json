{"ast":null,"code":"var _jsxFileName = \"/Users/uzairjamil/Desktop/Development/Projects/React/e-commerce-app/front-end/src/components/Cart.jsx\",\n    _s = $RefreshSig$();\n\n//    All Imports\nimport React from \"react\";\nimport { Divider } from \"@mui/material\";\nimport Footer from \"./Footer\";\nimport { useSelector } from \"react-redux\";\nimport \"../App.css\";\nimport { useDispatch } from \"react-redux\";\nimport { addProduct, deleteProduct } from \"../redux/actions\";\nimport { Button } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cart() {\n  _s();\n\n  const state = useSelector(state => state.cart);\n  const [totalPrice, setTotalPrice] = useState(0);\n  const dispatch = useDispatch();\n  toast.configure();\n\n  const addQty = product => {\n    dispatch(addProduct(product));\n    setTotalPrice(totalPrice + product.price);\n    localStorage.setItem(\"total\", JSON.stringify(totalPrice + product.price));\n    toast(\"Product Quantity Added\", {\n      type: \"success\"\n    });\n  };\n\n  const delQty = product => {\n    dispatch(deleteProduct(product));\n    setTotalPrice(totalPrice - product.price);\n    localStorage.setItem(\"total\", JSON.stringify(totalPrice - product.price));\n    toast(\"Product Quantity Subtracted\", {\n      type: \"success\"\n    });\n  };\n\n  useEffect(() => {\n    setTotalPrice(JSON.parse(localStorage.getItem(\"total\")));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heading cart-heading\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Total Items: \", state.length, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/checkout\",\n        state: {\n          totalPrice\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"checkout-button\",\n          variant: \"outlined\",\n          style: {\n            fontWeight: \"bolder\",\n            color: \"white\",\n            borderColor: \"white\",\n            fontSize: 20,\n            height: 50,\n            backgroundColor: \"#212529\",\n            borderRadius: 10\n          },\n          children: \"Checkout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-products\",\n      children: (state === null || state === void 0 ? void 0 : state.length) === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cart-details\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Your cart is empty \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 64\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 34\n      }, this) : state === null || state === void 0 ? void 0 : state.map(product => {\n        const {\n          id,\n          title,\n          price,\n          image,\n          qty\n        } = product;\n        const totalPrice = qty * price;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart-product\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cart-product-image\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: image,\n              className: \"cart-product-img\",\n              alt: \"Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cart-product-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cart-product-title\",\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"qty\",\n              children: [qty, \" x $\", price, \" = $\", Math.round(totalPrice)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"incAndDec\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                style: {\n                  fontWeight: \"bolder\",\n                  color: \"black\",\n                  borderColor: \"black\",\n                  fontSize: 30,\n                  height: 50\n                },\n                onClick: () => addQty(product),\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                style: {\n                  fontWeight: \"bolder\",\n                  color: \"black\",\n                  borderColor: \"black\",\n                  fontSize: 30,\n                  height: 50\n                },\n                onClick: () => delQty(product),\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Cart, \"yMWRoIQXPYj1XmGMFhZKcadwThs=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/Users/uzairjamil/Desktop/Development/Projects/React/e-commerce-app/front-end/src/components/Cart.jsx"],"names":["React","Divider","Footer","useSelector","useDispatch","addProduct","deleteProduct","Button","Link","useState","useEffect","toast","Cart","state","cart","totalPrice","setTotalPrice","dispatch","configure","addQty","product","price","localStorage","setItem","JSON","stringify","type","delQty","parse","getItem","length","fontWeight","color","borderColor","fontSize","height","backgroundColor","borderRadius","map","id","title","image","qty","Math","round"],"mappings":"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","sourcesContent":["//    All Imports\nimport React from \"react\";\nimport { Divider } from \"@mui/material\";\nimport Footer from \"./Footer\";\nimport { useSelector } from \"react-redux\";\nimport \"../App.css\";\nimport { useDispatch } from \"react-redux\";\nimport { addProduct, deleteProduct } from \"../redux/actions\";\nimport { Button } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { toast } from \"react-toastify\";\n\nfunction Cart() {\n  const state = useSelector((state) => state.cart);\n  const [totalPrice, setTotalPrice] = useState(0);\n  const dispatch = useDispatch();\n\n  toast.configure();\n\n  const addQty = (product) => {\n    dispatch(addProduct(product));\n    setTotalPrice(totalPrice + product.price);\n    localStorage.setItem(\"total\", JSON.stringify(totalPrice + product.price));\n    toast(\"Product Quantity Added\", { type: \"success\" });\n  };\n\n  const delQty = (product) => {\n    dispatch(deleteProduct(product));\n    setTotalPrice(totalPrice - product.price);\n    localStorage.setItem(\"total\", JSON.stringify(totalPrice - product.price));\n    toast(\"Product Quantity Subtracted\", { type: \"success\" });\n  };\n\n  useEffect(() => {\n    setTotalPrice(JSON.parse(localStorage.getItem(\"total\")));\n  }, []);\n\n  return (\n    <div className=\"cart\">\n      <div className=\"heading cart-heading\">\n        <h2>Cart</h2>\n        <h2>Total Items: {state.length} </h2>\n        <Link to=\"/checkout\" state={{ totalPrice }}>\n          <Button className=\"checkout-button\" variant=\"outlined\" style={{ fontWeight: \"bolder\", color: \"white\", borderColor: \"white\",\n              fontSize: 20,\n              height: 50,\n              backgroundColor: \"#212529\",\n              borderRadius: 10,\n            }}\n          >Checkout</Button>\n        </Link>\n      </div>\n      <Divider />\n\n      <div className=\"cart-products\">\n        {state?.length === 0 ? ( <div className=\"cart-details\"><h4>Your cart is empty </h4></div>) : (\n          state?.map((product) => {\n            const { id, title, price, image, qty } = product;\n            const totalPrice = qty * price;\n\n            return (\n              <div className=\"cart-product\" key={id}>\n                <div className=\"cart-product-image\">\n                  <img src={image} className=\"cart-product-img\" alt={\"Product\"}></img>\n                </div>\n\n                <div className=\"cart-product-details\">\n                  <div className=\"cart-product-title\">{title}</div>\n                  <div className=\"qty\">{qty} x ${price} = ${Math.round(totalPrice)}</div>\n                  <div className=\"incAndDec\">\n                    <Button variant=\"outlined\" style={{ fontWeight: \"bolder\", color: \"black\",borderColor: \"black\", fontSize: 30, height: 50}}\n                      onClick={() => addQty(product)}>\n                      +\n                    </Button>\n                    <Button variant=\"outlined\" style={{ fontWeight: \"bolder\", color: \"black\",borderColor: \"black\",fontSize: 30,height: 50}}\n                      onClick={() => delQty(product)}>\n                      -\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            );\n          })\n        )}\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}